// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  customer
  admin
}

enum OrderStatus {
  new
  processing
  completed
  delivered
}

enum UniformType {
  player
  goalkeeper
}

enum PrintStyle {
  In_chuyen_nhiet
  In_thuy_mon
  In_embroidery
}

model Customer {
  id          String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name        String?
  address     String?
  phone       String?
  deliveryNote String?  @map("delivery_note")
  createdAt   DateTime @default(now()) @map("created_at") @db.Timestamptz(6)
  email       String?
  authUserId  String?  @map("auth_user_id") @db.Uuid

  // Relations
  orders      Order[]
  deliveryInformation DeliveryInformation[]

  @@map("customers")
}

model DeliveryInformation {
  id            String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  customerId    String?  @map("customer_id") @db.Uuid
  orderId       String?  @map("order_id") @db.Uuid
  recipientName String   @map("recipient_name")
  address       String
  phone         String
  deliveryNote  String?  @map("delivery_note")
  createdAt     DateTime @default(now()) @map("created_at") @db.Timestamptz(6)

  // Relations
  customer      Customer? @relation(fields: [customerId], references: [id])
  order         Order?    @relation(fields: [orderId], references: [id])

  @@map("delivery_information")
}

model Font {
  id        String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name      String
  filePath  String   @map("file_path")
  fileType  String   @map("file_type")
  createdAt DateTime @default(now()) @map("created_at") @db.Timestamptz(6)

  @@map("fonts")
}

model Logo {
  id        String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  orderId   String?  @map("order_id") @db.Uuid
  filePath  String   @map("file_path")
  position  String   @default("chest_center")
  createdAt DateTime @default(now()) @map("created_at") @db.Timestamptz(6)
  xPosition Float?   @map("x_position") @db.DoublePrecision
  yPosition Float?   @map("y_position") @db.DoublePrecision
  scale     Float    @default(1.0) @db.DoublePrecision

  // Relations
  order     Order?   @relation(fields: [orderId], references: [id])

  @@map("logos")
}

model Order {
  id              String      @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  totalCost       Int         @default(0) @map("total_cost")
  status          OrderStatus @default(new)
  notes           String?
  createdAt       DateTime    @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt       DateTime    @default(now()) @map("updated_at") @db.Timestamptz(6)
  designData      Json        @default("{\"font_text\": {\"font\": \"Arial\"}, \"font_number\": {\"font\": \"Arial\"}}")
  designImage     String?     @map("design_image")
  referenceImages Json        @default("[]")
  designImageFront String?    @map("design_image_front")
  designImageBack  String?    @map("design_image_back")
  customerId      String?     @map("customer_id") @db.Uuid
  teamName        String?     @map("team_name")
  logoIds         String[]    @map("logo_ids") @db.Uuid

  // Relations
  customer        Customer?   @relation(fields: [customerId], references: [id])
  players         Player[]
  logos           Logo[]
  printConfigs    PrintConfig[]
  productLines    ProductLine[]
  deliveryInformation DeliveryInformation[]

  @@map("orders")
}

model Player {
  id                String      @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  orderId           String?     @map("order_id") @db.Uuid
  name              String?
  number            String
  size              String
  printImage        Boolean     @default(false) @map("print_image")
  createdAt         DateTime    @default(now()) @map("created_at") @db.Timestamptz(6)
  designImage       String?     @map("design_image")
  printStyle        PrintStyle  @default(In_chuyen_nhiet) @map("print_style")
  line1             String?     @map("line_1")
  line3             String?     @map("line_3")
  uniformType       UniformType @default(player) @map("uniform_type")
  chestNumber       Boolean     @default(false) @map("chest_number")
  pantsNumber       Boolean     @default(false) @map("pants_number")
  logoChestLeft     Boolean     @default(false) @map("logo_chest_left")
  logoChestRight    Boolean     @default(false) @map("logo_chest_right")
  logoChestCenter   Boolean     @default(false) @map("logo_chest_center")
  logoSleeveLeft    Boolean     @default(false) @map("logo_sleeve_left")
  logoSleeveRight   Boolean     @default(false) @map("logo_sleeve_right")
  logoPants         Boolean     @default(false) @map("logo_pants")
  note              String?
  upperText         String?     @map("upper_text")
  lowerText         String?     @map("lower_text")
  upperTextEnabled  Boolean     @default(false) @map("upper_text_enabled")
  lowerTextEnabled  Boolean     @default(false) @map("lower_text_enabled")
  chestText         String?     @map("chest_text")

  // Relations
  order             Order?      @relation(fields: [orderId], references: [id])

  @@map("players")
}

model PrintConfig {
  id                    String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  orderId               String?  @map("order_id") @db.Uuid
  font                  String   @default("Arial")
  fontFile              String?  @map("font_file")
  backMaterial          String   @default("In chuyển nhiệt") @map("back_material")
  backColor             String   @default("Đen") @map("back_color")
  frontMaterial         String   @default("In chuyển nhiệt") @map("front_material")
  frontColor            String   @default("Đen") @map("front_color")
  sleeveMaterial        String   @default("In chuyển nhiệt") @map("sleeve_material")
  sleeveColor           String   @default("Đen") @map("sleeve_color")
  legMaterial           String   @default("In chuyển nhiệt") @map("leg_material")
  legColor              String   @default("Đen") @map("leg_color")
  logoPositions         Json     @default("[]") @map("logo_positions")
  createdAt             DateTime @default(now()) @map("created_at") @db.Timestamptz(6)
  upperTextMaterial     String   @default("In chuyển nhiệt") @map("upper_text_material")
  lowerTextMaterial     String   @default("In chuyển nhiệt") @map("lower_text_material")

  // Relations
  order                 Order?   @relation(fields: [orderId], references: [id])

  @@map("print_configs")
}

model ProductLine {
  id        String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  orderId   String?  @map("order_id") @db.Uuid
  product   String
  position  String
  material  String
  size      String
  points    Int      @default(0)
  content   String?
  createdAt DateTime @default(now()) @map("created_at") @db.Timestamptz(6)

  // Relations
  order     Order?   @relation(fields: [orderId], references: [id])

  @@map("product_lines")
}

model Size {
  sizeId      String   @id @default(dbgenerated("gen_random_uuid()")) @map("size_id") @db.Uuid
  sizeValue   String   @map("size_value")
  category    String
  description String?
  createdAt   DateTime @default(now()) @map("created_at") @db.Timestamptz(6)

  @@map("sizes")
}

model UserRoleModel {
  id        String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  userId    String   @map("user_id") @db.Uuid
  role      UserRole
  createdAt DateTime @default(now()) @map("created_at") @db.Timestamptz(6)

  @@map("user_roles")
}
